package net.colinjohnson.vis.grid;

import java.util.ArrayList;
import java.util.List;
import java.util.function.Supplier;

public class Grid<T extends GridNode> {
    private List<List<T>> grid;
    private final Supplier<T> defaultNodeSupplier;


    public Grid(Supplier<T> defaultNodeSupplier, int width, int height) {
        if (width < 1 || height < 1) {
            throw new IllegalArgumentException("Grid width and height must be > 1");
        }
        this.defaultNodeSupplier = defaultNodeSupplier;
        clearGrid();
    }

    /**
     * Resets the grid and fills it with default nodes, as generated by the {@code defaultNodeSupplier}.
     */
    public void clearGrid() {
        grid = new ArrayList<>();
        for (int x = 0; x < getWidth(); x++) {
            List<T> column = new ArrayList<>();
            grid.add(column);
            for (int y = 0; y < getHeight(); y++) {
                column.add(defaultNodeSupplier.get());
            }
        }
    }

    public void setNode(int x, int y, T node) {
        grid.get(x).set(y, node);
    }

    public T getNode(int x, int y) {
        return grid.get(x).get(y);
    }

    public int getWidth() {
        return grid.size();
    }

    public int getHeight() {
        return grid.get(0).size();
    }
}
